{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/data/todo-data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListTodosComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nfunction ListTodosComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ListTodosComponent_tr_20_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateTodo(todo_r2.id));\n    });\n    i0.ɵɵtext(10, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ListTodosComponent_tr_20_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteTodo(todo_r2.id));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const todo_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(todo_r2.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, todo_r2.targetDate));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(todo_r2.done);\n  }\n}\nexport class Todo {\n  constructor(id, description, done, targetDate) {\n    this.id = id;\n    this.description = description;\n    this.done = done;\n    this.targetDate = targetDate;\n  }\n}\nexport class ListTodosComponent {\n  constructor(todoService, router) {\n    this.todoService = todoService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.refreshTodos();\n  }\n  refreshTodos() {\n    this.todoService.retrieveAllTodos('chloe').subscribe(response => {\n      console.log(response);\n      this.todos = response;\n    });\n  }\n  deleteTodo(id) {\n    console.log(`delete todo ${id}`);\n    this.todoService.deleteTodo(\"chloe\", id).subscribe(response => {\n      console.log(response);\n      this.message = `Delete of Todo successfully `;\n      this.refreshTodos();\n    });\n  }\n  updateTodo(id) {\n    this.router.navigate(['todos', id]);\n  }\n}\nListTodosComponent.ɵfac = function ListTodosComponent_Factory(t) {\n  return new (t || ListTodosComponent)(i0.ɵɵdirectiveInject(i1.TodoDataService), i0.ɵɵdirectiveInject(i2.Router));\n};\nListTodosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListTodosComponent,\n  selectors: [[\"app-list-todos\"]],\n  decls: 24,\n  vars: 2,\n  consts: [[\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"container\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"alert\", \"alert-success\"], [1, \"btn\", \"btn-warning\", 3, \"click\"]],\n  template: function ListTodosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"My Todo's\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ListTodosComponent_div_2_Template, 2, 1, \"div\", 0);\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"table\", 2)(5, \"caption\");\n      i0.ɵɵtext(6, \"My Todo's\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Target Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"is Completed?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Update\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, ListTodosComponent_tr_20_Template, 14, 5, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 4)(22, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ListTodosComponent_Template_button_click_22_listener() {\n        return ctx.addTodo(ctx.todo.id);\n      });\n      i0.ɵɵtext(23, \"Add\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAEAA,8BAAiD;IAAAA,YAAW;IAAAA,iBAAM;;;;IAAjBA,eAAW;IAAXA,oCAAW;;;;;;IAehDA,0BAA+B;IACvBA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAA0B;;IAAAA,iBAAK;IACnCA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAAyBA,uBAAM;IAAAA,iBAAS;IACjFA,2BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAAyBA,uBAAM;IAAAA,iBAAS;;;;IAJ7EA,eAAoB;IAApBA,yCAAoB;IACpBA,eAA0B;IAA1BA,8DAA0B;IAC1BA,eAAa;IAAbA,kCAAa;;;AChBjC,OAAM,MAAOC,IAAI;EACfC,YACSC,EAAU,EACVC,WAAmB,EACnBC,IAAa,EACbC,UAAgB;IAHhB,OAAE,GAAFH,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,SAAI,GAAJC,IAAI;IACJ,eAAU,GAAVC,UAAU;EAGnB;;AASF,OAAM,MAAOC,kBAAkB;EAK7BL,YACUM,WAA4B,EAC5BC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EACZ;EAEJC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,IAAI,CAACH,WAAW,CAACI,gBAAgB,CAAC,OAAO,CAAC,CAACC,SAAS,CAClDC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACG,KAAK,GAAGH,QAAQ;IACvB,CAAC,CACF;EACH;EAEAI,UAAU,CAACf,EAAE;IACXY,OAAO,CAACC,GAAG,CAAC,eAAeb,EAAE,EAAE,CAAC;IAChC,IAAI,CAACK,WAAW,CAACU,UAAU,CAAC,OAAO,EAAEf,EAAE,CAAC,CAACU,SAAS,CAChDC,QAAQ,IAAG;MACTC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACK,OAAO,GAAG,8BAA8B;MAC7C,IAAI,CAACR,YAAY,EAAE;IACrB,CAAC,CACF;EACH;EAEAS,UAAU,CAACjB,EAAE;IACX,IAAI,CAACM,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,EAAElB,EAAE,CAAC,CAAC;EAErC;;AArCWI,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDrB/B1B,0BAAI;MAAAA,yBAAS;MAAAA,iBAAK;MAElBA,mEAAkE;MAElEA,8BAAuB;MAENA,yBAAS;MAAAA,iBAAU;MAC5BA,6BAAO;MAEKA,4BAAW;MAAAA,iBAAK;MACpBA,2BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MACpBA,2BAAI;MAAAA,8BAAa;MAAAA,iBAAK;MACtBA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAGvBA,8BAAO;MACHA,oEAMK;MACTA,iBAAQ;MAEZA,+BAAiB;MACLA;QAAA,OAAS2B,wBAAgB;MAAA,EAAC;MAAyB3B,oBAAG;MAAAA,iBAAS;;;MAzB7CA,eAAa;MAAbA,kCAAa;MAedA,gBAAQ;MAARA,mCAAQ","names":["i0","Todo","constructor","id","description","done","targetDate","ListTodosComponent","todoService","router","ngOnInit","refreshTodos","retrieveAllTodos","subscribe","response","console","log","todos","deleteTodo","message","updateTodo","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\01_CS\\spring\\todo\\src\\app\\list-todos\\list-todos.component.html","D:\\01_CS\\spring\\todo\\src\\app\\list-todos\\list-todos.component.ts"],"sourcesContent":["<h1>My Todo's</h1>\n\n<div class=\"alert alert-success\" *ngIf=\"message\">{{message}}</div>\n\n<div class=\"container\">\n    <table class=\"table\">\n        <caption>My Todo's</caption>\n        <thead>\n            <tr>\n                <th>description</th>\n                <th>Target Date</th>\n                <th>is Completed?</th>\n                <th>Update</th>\n                <th>Delete</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let todo of todos\">\n                <td>{{todo.description}}</td>\n                <td>{{todo.targetDate | date}}</td>\n                <td>{{todo.done}}</td>\n                <td><button (click)=\"updateTodo(todo.id)\" class=\"btn btn-success\">Update</button></td>\n                <td><button (click)=\"deleteTodo(todo.id)\" class=\"btn btn-warning\">Delete</button></td>\n            </tr>\n        </tbody>\n    </table>\n    <div class=\"row\">\n        <button (click)=\"addTodo(todo.id)\" class=\"btn btn-success\">Add</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TodoDataService } from '../service/data/todo-data.service';\n\nexport class Todo {\n  constructor(\n    public id: number,\n    public description: string,\n    public done: boolean,\n    public targetDate: Date\n  ) {\n\n  }\n}\n\n\n@Component({\n  selector: 'app-list-todos',\n  templateUrl: './list-todos.component.html',\n  styleUrls: ['./list-todos.component.css']\n})\nexport class ListTodosComponent implements OnInit {\n\n  todos: Todo[]\n  message: string\n\n  constructor(\n    private todoService: TodoDataService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.refreshTodos();\n  }\n\n  refreshTodos() {\n    this.todoService.retrieveAllTodos('chloe').subscribe(\n      response => {\n        console.log(response);\n        this.todos = response;\n      }\n    )\n  }\n\n  deleteTodo(id) {\n    console.log(`delete todo ${id}`)\n    this.todoService.deleteTodo(\"chloe\", id).subscribe(\n      response => {\n        console.log(response);\n        this.message = `Delete of Todo successfully `\n        this.refreshTodos();\n      }\n    )\n  }\n\n  updateTodo(id) {\n    this.router.navigate(['todos', id])\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}