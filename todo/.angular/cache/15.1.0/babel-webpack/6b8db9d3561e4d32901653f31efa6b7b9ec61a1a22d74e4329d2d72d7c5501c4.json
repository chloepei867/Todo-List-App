{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet RouteGuardService = class RouteGuardService {\n  constructor(hardcodedAuthenticationService, router) {\n    this.hardcodedAuthenticationService = hardcodedAuthenticationService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.hardcodedAuthenticationService.isUserLoggedIn()) return true;\n    return false;\n  }\n};\nRouteGuardService = __decorate([Injectable({\n  providedIn: 'root'\n})], RouteGuardService);\nexport { RouteGuardService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAQnC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YACUC,8BAA8D,EAC9DC,MAAc;IADd,mCAA8B,GAA9BD,8BAA8B;IAC9B,WAAM,GAANC,MAAM;EAAY;EAC5BC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAI,IAAI,CAACJ,8BAA8B,CAACK,cAAc,EAAE,EACtD,OAAO,IAAI;IAEb,OAAO,KAAK;EACd;CACD;AAVYP,iBAAiB,eAH7BD,UAAU,CAAC;EACVS,UAAU,EAAE;CACb,CAAC,GACWR,iBAAiB,CAU7B;SAVYA,iBAAiB","names":["Injectable","RouteGuardService","constructor","hardcodedAuthenticationService","router","canActivate","route","state","isUserLoggedIn","providedIn"],"sourceRoot":"","sources":["D:\\01_CS\\spring\\todo\\src\\app\\service\\route-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HardcodedAuthenticationService } from './hardcoded-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n  constructor(\n    private hardcodedAuthenticationService: HardcodedAuthenticationService,\n    private router: Router) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.hardcodedAuthenticationService.isUserLoggedIn())\n      return true;\n\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}