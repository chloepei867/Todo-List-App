{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./hardcoded-authentication.service\";\nexport class RouteGuardService {\n  constructor(hardcodedAuthenticationService) {\n    this.hardcodedAuthenticationService = hardcodedAuthenticationService;\n  }\n  canActivate(route, state) {\n    if (this.hardcodedAuthenticationService.isUserLoggedIn()) return true;\n    return false;\n  }\n}\nRouteGuardService.ɵfac = function RouteGuardService_Factory(t) {\n  return new (t || RouteGuardService)(i0.ɵɵinject(i1.HardcodedAuthenticationService));\n};\nRouteGuardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RouteGuardService,\n  factory: RouteGuardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAC5BC,YAAoBC,8BAA8D;IAA9D,mCAA8B,GAA9BA,8BAA8B;EAAoC;EACtFC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAI,IAAI,CAACH,8BAA8B,CAACI,cAAc,EAAE,EACtD,OAAO,IAAI;IACb,OAAO,KAAK;EACd;;AANWN,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAO,SAAjBP,iBAAiB;EAAAQ,YAFhB;AAAM","names":["RouteGuardService","constructor","hardcodedAuthenticationService","canActivate","route","state","isUserLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["D:\\01_CS\\spring\\todo\\src\\app\\service\\route-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HardcodedAuthenticationService } from './hardcoded-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n  constructor(private hardcodedAuthenticationService: HardcodedAuthenticationService) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.hardcodedAuthenticationService.isUserLoggedIn())\n      return true;\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}