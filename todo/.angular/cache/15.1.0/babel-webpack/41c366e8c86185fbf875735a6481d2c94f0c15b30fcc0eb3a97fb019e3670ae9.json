{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/hardcoded-authentication.service\";\nimport * as i3 from \"../service/basic-authentication.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class LoginComponent {\n  //dependency injection\n  constructor(router, hardcodedAuthenticationService, basicAuthenticationService) {\n    this.router = router;\n    this.hardcodedAuthenticationService = hardcodedAuthenticationService;\n    this.basicAuthenticationService = basicAuthenticationService;\n    this.username = \"chloe\";\n    this.password = \"\";\n    this.errorMessage = \"Invalid Credentials\";\n    this.invalidLogin = false;\n  }\n  ngOnInit() {}\n  handleLogin() {\n    // console.log(this.username);\n    //if (this.username === \"chloe\" && this.password === \"dummy\")\n    if (this.hardcodedAuthenticationService.authenticate(this.username, this.password)) {\n      this.router.navigate(['welcome', this.username]);\n      this.invalidLogin = false;\n    } else {\n      this.invalidLogin = true;\n    }\n  }\n  // handleBasicAuthLogin() {\n  //   // console.log(this.username);\n  //   //if(this.username===\"in28minutes\" && this.password === 'dummy') {\n  //   this.basicAuthenticationService.executeAuthenticationService(this.username, this.password).subscribe({\n  //     next: data => {\n  //       console.log(data);\n  //       this.router.navigate(['welcome', this.username]);\n  //       this.invalidLogin = false;\n  //     },\n  //     error: (error) => {\n  //       console.log(error);\n  //       this.invalidLogin = true;\n  //     }\n  //   })\n  // }\n  handleBasicAuthLogin() {\n    // console.log(this.username);\n    //if(this.username===\"in28minutes\" && this.password === 'dummy') {\n    this.basicAuthenticationService.executeAuthenticationService(this.username, this.password).subscribe(data => {\n      console.log(data);\n      this.router.navigate(['welcome', this.username]);\n      console.log(\"holy shit\");\n      this.invalidLogin = false;\n    }, error => {\n      console.log(error);\n      this.invalidLogin = true;\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HardcodedAuthenticationService), i0.ɵɵdirectiveInject(i3.BasicAuthenticationService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 11,\n  vars: 3,\n  consts: [[1, \"container\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"alert\", \"alert-warning\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Login!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵtemplate(3, LoginComponent_div_3_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(4, \"div\");\n      i0.ɵɵtext(5, \" User Name: \");\n      i0.ɵɵelementStart(6, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \" Password: \");\n      i0.ɵɵelementStart(8, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_9_listener() {\n        return ctx.handleBasicAuthLogin();\n      });\n      i0.ɵɵtext(10, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidLogin);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAGIA,8BAAsD;IAAAA,YAAgB;IAAAA,iBAAM;;;;IAAtBA,eAAgB;IAAhBA,yCAAgB;;;ACO1E,OAAM,MAAOC,cAAc;EAOzB;EACAC,YAAoBC,MAAc,EACxBC,8BAA8D,EAC9DC,0BAAsD;IAF5C,WAAM,GAANF,MAAM;IAChB,mCAA8B,GAA9BC,8BAA8B;IAC9B,+BAA0B,GAA1BC,0BAA0B;IARpC,aAAQ,GAAG,OAAO;IAClB,aAAQ,GAAG,EAAE;IACb,iBAAY,GAAG,qBAAqB;IACpC,iBAAY,GAAG,KAAK;EAKgD;EAEpEC,QAAQ,IACR;EAEAC,WAAW;IACT;IACA;IACA,IAAI,IAAI,CAACH,8BAA8B,CAACI,YAAY,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,EAAE;MAClF,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,SAAS,EAAE,IAAI,CAACF,QAAQ,CAAC,CAAC;MAChD,IAAI,CAACG,YAAY,GAAG,KAAK;KAC1B,MAAM;MACL,IAAI,CAACA,YAAY,GAAG,IAAI;;EAE5B;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,oBAAoB;IAClB;IACA;IACA,IAAI,CAACR,0BAA0B,CAACS,4BAA4B,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CACvFK,SAAS,CACRC,IAAI,IAAG;MACLC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MAEjB,IAAI,CAACb,MAAM,CAACQ,QAAQ,CAAC,CAAC,SAAS,EAAE,IAAI,CAACF,QAAQ,CAAC,CAAC;MAChDQ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxB,IAAI,CAACN,YAAY,GAAG,KAAK;IAC3B,CAAC,EACDO,KAAK,IAAG;MACNF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAClB,IAAI,CAACP,YAAY,GAAG,IAAI;IAC1B,CAAC,CACF;EACL;;AA3DWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV3BxB,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MAEfA,8BAAuB;MACnBA,+DAA4E;MAE5EA,2BAAK;MACDA,4BAAW;MAAAA,gCAA0D;MAAvBA;QAAA;MAAA,EAAsB;MAAzDA,iBAA0D;MACrEA,2BAAU;MAAAA,gCAA8D;MAAvBA;QAAA;MAAA,EAAsB;MAA7DA,iBAA8D;MAGxEA,iCAA+D;MAAvDA;QAAA,OAAQyB,0BAAsB;MAAA;MAAyBzB,sBAAK;MAAAA,iBAAS;;;MAP/CA,eAAkB;MAAlBA,uCAAkB;MAGFA,eAAsB;MAAtBA,sCAAsB;MACnBA,eAAsB;MAAtBA,sCAAsB","names":["i0","LoginComponent","constructor","router","hardcodedAuthenticationService","basicAuthenticationService","ngOnInit","handleLogin","authenticate","username","password","navigate","invalidLogin","handleBasicAuthLogin","executeAuthenticationService","subscribe","data","console","log","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\01_CS\\spring\\todo\\src\\app\\login\\login.component.html","D:\\01_CS\\spring\\todo\\src\\app\\login\\login.component.ts"],"sourcesContent":["<h1>Login!</h1>\n\n<div class=\"container\">\n    <div class=\"alert alert-warning\" *ngIf=\"invalidLogin\">{{errorMessage}}</div>\n\n    <div>\n        User Name: <input type=\"text\" name=\"username\" [(ngModel)]=\"username\">\n        Password: <input type=\"password\" name=\"password\" [(ngModel)]=\"password\">\n\n        <!-- <button (click)=handleLogin() class=\"btn btn-success\">Login</button> -->\n        <button (click)=handleBasicAuthLogin() class=\"btn btn-success\">Login</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BasicAuthenticationService } from '../service/basic-authentication.service';\nimport { HardcodedAuthenticationService } from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username = \"chloe\"\n  password = \"\"\n  errorMessage = \"Invalid Credentials\"\n  invalidLogin = false\n\n  //dependency injection\n  constructor(private router: Router,\n    private hardcodedAuthenticationService: HardcodedAuthenticationService,\n    private basicAuthenticationService: BasicAuthenticationService) { }\n\n  ngOnInit(): void {\n  }\n\n  handleLogin() {\n    // console.log(this.username);\n    //if (this.username === \"chloe\" && this.password === \"dummy\")\n    if (this.hardcodedAuthenticationService.authenticate(this.username, this.password)) {\n      this.router.navigate(['welcome', this.username])\n      this.invalidLogin = false\n    } else {\n      this.invalidLogin = true\n    }\n  }\n\n  // handleBasicAuthLogin() {\n  //   // console.log(this.username);\n  //   //if(this.username===\"in28minutes\" && this.password === 'dummy') {\n  //   this.basicAuthenticationService.executeAuthenticationService(this.username, this.password).subscribe({\n  //     next: data => {\n  //       console.log(data);\n  //       this.router.navigate(['welcome', this.username]);\n  //       this.invalidLogin = false;\n  //     },\n  //     error: (error) => {\n  //       console.log(error);\n  //       this.invalidLogin = true;\n  //     }\n  //   })\n  // }\n\n  handleBasicAuthLogin() {\n    // console.log(this.username);\n    //if(this.username===\"in28minutes\" && this.password === 'dummy') {\n    this.basicAuthenticationService.executeAuthenticationService(this.username, this.password)\n      .subscribe(\n        data => {\n          console.log(data)\n\n          this.router.navigate(['welcome', this.username])\n          console.log(\"holy shit\")\n          this.invalidLogin = false\n        },\n        error => {\n          console.log(error)\n          this.invalidLogin = true\n        }\n      )\n  }\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}