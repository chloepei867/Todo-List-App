{"ast":null,"code":"import { Todo } from '../list-todos/list-todos.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/data/todo-data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nexport class TodoComponent {\n  constructor(todoService, route, router) {\n    this.todoService = todoService;\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.todo = new Todo(this.id, '', false, new Date());\n    if (this.id != -1) {\n      this.todoService.retrieveTodo('chloe', this.id).subscribe(data => this.todo = data);\n    }\n  }\n  saveTodo() {\n    if (this.id === -1) {\n      //=== ==\n      this.todoService.createTodo('chloe', this.todo).subscribe(data => {\n        console.log(data);\n        this.router.navigate(['todos']);\n      });\n    } else {\n      this.todoService.updateTodo('chloe', this.id, this.todo).subscribe(data => {\n        console.log(data);\n        this.router.navigate(['todos']);\n      });\n    }\n  }\n}\nTodoComponent.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || TodoComponent)(i0.ɵɵdirectiveInject(i1.TodoDataService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nTodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoComponent,\n  selectors: [[\"app-todo\"]],\n  decls: 15,\n  vars: 5,\n  consts: [[1, \"container\"], [\"action\", \"\"], [1, \"form-group\"], [\"for\", \"description\"], [\"type\", \"text\", \"name\", \"description\", \"required\", \"required\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"targetDate\"], [\"type\", \"date\", \"name\", \"targetDate\", \"required\", \"required\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Todo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1)(4, \"fieldset\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function TodoComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.todo.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"fieldset\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Target Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function TodoComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.todo.targetDate = $event;\n      });\n      i0.ɵɵpipe(12, \"date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function TodoComponent_Template_button_click_13_listener() {\n        return ctx.saveTodo();\n      });\n      i0.ɵɵtext(14, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.todo.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind2(12, 2, ctx.todo.targetDate, \"yyyy-MM-dd\"));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,QAAQ,oCAAoC;;;;;;AAQzD,OAAM,MAAOC,aAAa;EAKxBC,YACUC,WAA4B,EAC5BC,KAAqB,EACrBC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;EAEZ;EAEJC,QAAQ;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACC,IAAI,GAAG,IAAIV,IAAI,CAAC,IAAI,CAACO,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAII,IAAI,EAAE,CAAC;IACpD,IAAI,IAAI,CAACJ,EAAE,IAAI,CAAC,CAAC,EAAE;MACjB,IAAI,CAACJ,WAAW,CAACS,YAAY,CAAC,OAAO,EAAE,IAAI,CAACL,EAAE,CAAC,CAC5CM,SAAS,CACRC,IAAI,IAAI,IAAI,CAACJ,IAAI,GAAGI,IAAI,CACzB;;EAEP;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACR,EAAE,KAAK,CAAC,CAAC,EAAE;MAAE;MACpB,IAAI,CAACJ,WAAW,CAACa,UAAU,CAAC,OAAO,EAAE,IAAI,CAACN,IAAI,CAAC,CAC5CG,SAAS,CACRC,IAAI,IAAG;QACLG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QACjB,IAAI,CAACT,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC,CACF;KACJ,MAAM;MACL,IAAI,CAAChB,WAAW,CAACiB,UAAU,CAAC,OAAO,EAAE,IAAI,CAACb,EAAE,EAAE,IAAI,CAACG,IAAI,CAAC,CACrDG,SAAS,CACRC,IAAI,IAAG;QACLG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QACjB,IAAI,CAACT,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC,CACF;;EAEP;;AAzCWlB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1BC,0BAAI;MAAAA,oBAAI;MAAAA,iBAAK;MAGbA,8BAAuB;MAGcA,2BAAW;MAAAA,iBAAQ;MAC5CA,gCACwB;MADLA;QAAA;MAAA,EAA8B;MAAjDA,iBACwB;MAE5BA,mCAA6B;MACDA,4BAAW;MAAAA,iBAAQ;MAC3CA,iCAC0G;MAAtGA;QAAA;MAAA,EAA0C;;MAD9CA,iBAC0G;MAE9GA,kCAAmE;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;;;MARzDA,eAA8B;MAA9BA,8CAA8B;MAK9BA,eAA+C;MAA/CA,kFAA+C","names":["Todo","TodoComponent","constructor","todoService","route","router","ngOnInit","id","snapshot","params","todo","Date","retrieveTodo","subscribe","data","saveTodo","createTodo","console","log","navigate","updateTodo","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\01_CS\\spring\\todo\\src\\app\\todo\\todo.component.ts","D:\\01_CS\\spring\\todo\\src\\app\\todo\\todo.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Todo } from '../list-todos/list-todos.component';\nimport { TodoDataService } from '../service/data/todo-data.service';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  id: number\n  todo: Todo\n\n  constructor(\n    private todoService: TodoDataService,\n    private route: ActivatedRoute,\n    private router: Router\n\n  ) { }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.todo = new Todo(this.id, '', false, new Date());\n    if (this.id != -1) {\n      this.todoService.retrieveTodo('chloe', this.id)\n        .subscribe(\n          data => this.todo = data\n        )\n    }\n  }\n\n  saveTodo() {\n    if (this.id === -1) { //=== ==\n      this.todoService.createTodo('chloe', this.todo)\n        .subscribe(\n          data => {\n            console.log(data)\n            this.router.navigate(['todos'])\n          }\n        )\n    } else {\n      this.todoService.updateTodo('chloe', this.id, this.todo)\n        .subscribe(\n          data => {\n            console.log(data)\n            this.router.navigate(['todos'])\n          }\n        )\n    }\n  }\n\n\n\n}\n","<h1>Todo</h1>\n\n\n<div class=\"container\">\n    <form action=\"\">\n        <fieldset class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <input type=\"text\" [(ngModel)]=\"todo.description\" class=\"form-control\" name=\"description\"\n                required=\"required\">\n        </fieldset>\n        <fieldset class=\"form-group\">\n            <label for=\"targetDate\">Target Date</label>\n            <input type=\"date\" [ngModel]=\"todo.targetDate | date:'yyyy-MM-dd'\"\n                (ngModelChange)=\"todo.targetDate = $event\" class=\"form-control\" name=\"targetDate\" required=\"required\">\n        </fieldset>\n        <button type=\"submit\" class=\"btn btn-success\" (click)=\"saveTodo()\">Save</button>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}