{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../basic-authentication.service\";\nexport class HttpInterceptorBasicAuthService {\n  constructor(basicAuthenticationService) {\n    this.basicAuthenticationService = basicAuthenticationService;\n  }\n  intercept(request, next) {\n    // let username = \"chloe\"\n    // let password = \"dummy\"\n    // let basicAuthHeaderString = \"Basic \" + window.btoa(username + \":\" + password);\n    let basicAuthHeaderString;\n    request = request.clone({\n      setHeaders: {\n        Authorization: basicAuthHeaderString\n      }\n    });\n    return next.handle(request);\n  }\n}\nHttpInterceptorBasicAuthService.ɵfac = function HttpInterceptorBasicAuthService_Factory(t) {\n  return new (t || HttpInterceptorBasicAuthService)(i0.ɵɵinject(i1.BasicAuthenticationService));\n};\nHttpInterceptorBasicAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpInterceptorBasicAuthService,\n  factory: HttpInterceptorBasicAuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,+BAA+B;EAE1CC,YACUC,0BAAsD;IAAtD,+BAA0B,GAA1BA,0BAA0B;EAChC;EAEJC,SAAS,CAACC,OAAyB,EAAEC,IAAiB;IACpD;IACA;IACA;IACA,IAAIC,qBAAqB;IAEzBF,OAAO,GAAGA,OAAO,CAACG,KAAK,CAAC;MACtBC,UAAU,EAAE;QACVC,aAAa,EAAEH;;KAElB,CAAC;IACF,OAAOD,IAAI,CAACK,MAAM,CAACN,OAAO,CAAC;EAC7B;;AAlBWJ,+BAA+B;mBAA/BA,+BAA+B;AAAA;AAA/BA,+BAA+B;SAA/BA,+BAA+B;EAAAW,SAA/BX,+BAA+B;EAAAY,YAF9B;AAAM","names":["HttpInterceptorBasicAuthService","constructor","basicAuthenticationService","intercept","request","next","basicAuthHeaderString","clone","setHeaders","Authorization","handle","factory","providedIn"],"sourceRoot":"","sources":["D:\\01_CS\\spring\\todo\\src\\app\\service\\http\\http-interceptor-basic-auth.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BasicAuthenticationService } from '../basic-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpInterceptorBasicAuthService implements HttpInterceptor {\n\n  constructor(\n    private basicAuthenticationService: BasicAuthenticationService\n  ) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    // let username = \"chloe\"\n    // let password = \"dummy\"\n    // let basicAuthHeaderString = \"Basic \" + window.btoa(username + \":\" + password);\n    let basicAuthHeaderString\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: basicAuthHeaderString\n      }\n    })\n    return next.handle(request);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}